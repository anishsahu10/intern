#include<iostream>
#include<bits/stdc++.h>
using namespace std;
#define MAXN (1000*1000)

int ax[MAXN], ay[MAXN], bx[MAXN], by[MAXN];

int solve(int n, int m)
{
  set<pair<int, int>> x2y, y2x;
  for(int i = 0; i < n; i++)
  {
    x2y.insert({ax[i], ay[i]});
    y2x.insert({ay[i], ax[i]});
  }

  int count = 0;

  for(int i = 1; i < m; i++)
  {
    if(bx[i - 1] == bx[i])  // Horizontal line
    {
      int ty1 = min(by[i], by[i - 1]);
      int ty2 = max(by[i], by[i - 1]);

      auto it1 = x2y.lower_bound({bx[i], ty1});
      auto it2 = x2y.upper_bound({bx[i], ty2});

      auto it = it1;
      while(it != it2)
      {
        auto it3 = y2x.lower_bound({it -> second, it -> first});
        y2x.erase(it3);
        count++;
        it++;
      }
    }

    else // Vertical line
    {
      int tx1 = min(bx[i], bx[i - 1]);
      int tx2 = max(bx[i], bx[i - 1]);

      auto it1 = y2x.lower_bound({by[i], tx1});
      auto it2 = y2x.upper_bound({by[i], tx2});

      auto it = it1;

      while(it != it2)
      {
        auto it3 = x2y.lower_bound({it -> second, it -> first});
        x2y.erase(it3);
        it++;
        count++;
      }
    }
  }
  return count;
}

int main()
{
  cin.tie(NULL);
  cout.tie(NULL);
  int n, m;

  cin >> n >> m;

  for(int i = 0; i < n; i++)
    cin >> ax[i];

  for(int j = 0; j < n; j++)
    cin >> ay[j];

  for(int i = 0; i < m; i++)
    cin >> bx[i];

  for(int j = 0; j < m; j++)
    cin >> by[j];

    cout << solve(n, m) << " ";
    return 0;
}
